# Author: Habib Sabiu
# Date: March 31, 2017
# Purpose: Script to plot aggregated CPU load logs generated by Ganglia
# Copyright: Any person can adopt this script to their specific need

from matplotlib.font_manager import FontProperties
from datetime import datetime, timedelta

import csv
import matplotlib.pyplot as plt
import matplotlib.dates as mdates

with open('aggCPULoad.csv', 'rb') as f:
    reader = csv.reader(f)
    data_list = list(reader)

time_stamp_list = []
total_cpu_idle_list = []
total_cpu_user_list = []

for index, line in enumerate(data_list):
    if index > 0:
        time_stamp = line[0]
        total_cpu_idle = (float(line[1]) + float(line[3]) + float(line[5]) + float(line[7]) + float(line[9]) + float(line[11]) + float(line[13]) + float(line[15]) + float(line[17]) + float(line[19]) + float(line[21])) / 11.0
        total_cpu_user = (float(line[2]) + float(line[4]) + float(line[6]) + float(line[8]) + float(line[10]) + float(line[12]) + float(line[14]) + float(line[16]) + float(line[18]) + float(line[20]) + float(line[22])) / 11.0

        time_stamp_list.append(datetime.strptime(time_stamp[0:19], "%Y-%m-%dT%H:%M:%S"))
        total_cpu_idle_list.append(total_cpu_idle)
        total_cpu_user_list.append(total_cpu_user)

fig, ax = plt.subplots()
plt.title("Image format conversion - YARN", fontsize=20)
plt.ylabel("CPU Utilization (%)", fontsize=15)
plt.xlabel("Timestamp", fontsize=15)
#plt.xlim([datetime(2017, 02, 01, 14, 22, 00), datetime(2017, 02, 01, 14, 35, 00)])
plt.ylim([-5, 105])

#ax.xaxis.set_major_locator(mdates.SecondLocator(interval=60))
ax.xaxis.set_major_formatter(mdates.DateFormatter('%H:%M:S'))

ax.plot_date(time_stamp_list, total_cpu_idle_list, fmt="r*-", label="cpu idle", )
ax.plot_date(time_stamp_list, total_cpu_user_list, fmt="b.-", label="cpu user")

# font of the legend
fontP = FontProperties()
fontP.set_size('large')

ax.legend(loc='upper right', shadow=False, prop=fontP)
ax.xaxis.set_major_formatter(mdates.DateFormatter('%H:%M:%S'))
ax.grid(True)
fig.autofmt_xdate()
plt.show()
